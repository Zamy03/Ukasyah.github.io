openapi: 3.0.0
info:
  title: "ATS Pemograman 3"
  version: "1.0.0"
servers:
  - url: "http://localhost:8085/"
paths:
  /baju:
    get:
      tags:
        - "Get data"
      summary: "Get data"
      description: |
        This is a GET request and it is used to \"get\" data from an endpoint.
        There is no request body for a GET request, but you can use query parameters
        to help specify the resource you want data on (e.g., in this request, we have
        `id=1`).
        
        A successful GET response will have a `200 OK` status, and should include some
        kind of response body - for example, HTML web content or JSON data.
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "Successful response"
          content:
            application/json: {}
    post:
      tags:
        - "Post Data"
      summary: "Post Data"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jenis_baju:
                  type: string
                warna:
                  type: string
                ukuran:
                  type: string
              required:
                - jenis_baju
                - warna
                - ukuran
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
    put:
      summary: Update data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_baju:
                  type: integer
                  example: 2
                jenis_baju:
                  type: string
                  example: kemeja
                warna:
                  type: string
                  example: merah
                ukuran:
                  type: string
                  example: XL
        security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
  /baju?id_baju={id_baju}:
    get:
      tags:
        - "Get data by Id"
      summary: "Get data by Id"
      parameters:
        - name: "id_baju"
          in: "query" 
          required: true
          schema:
            type: "integer"
            example: 3
      responses:
        "200":
          description: "Successful response"
          content:
            application/json: {}
    delete:
      tags:
        - "Delete data"
      summary: "Delete data"
      parameters:
        - name: "id_baju"
          in: "query"
          required: true
          schema:
            type: "integer"
            example: 3
      responses:
        "200":
          description: "Successful response"
          content:
            application/json: {}
  /login:
    post:
      tags:
        - "Post Login"
      summary: "Post Login"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              example:
                username: "Kasyzzam"
                password: "B1sm1ll4H"
      responses:
        "200":
          description: "Successful response"
          content:
            application/json: {}

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
